.HTML
<!DOCTYPE html>
<html>
<head>
    <title>Voter Age Checker</title>
</head>
<body>
    <form method="post" action="http://localhost:8083/TYBBACA/Slip18.jsp">
        Enter age: <input type="text" name="age"><br>
        <input type="submit" value="Check">
    </form>
</body>
</html>
.JSP
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
    <title>Voter Age Result</title>
</head>
<body>
    <font color="red">
    <%
        String age = request.getParameter("age");
        if (age == null || age.isEmpty()) {
    %>
        <p>Please enter a valid age.</p>
    <%
        } else {
            try {
                int ag = Integer.parseInt(age);
                if (ag >= 18) {
    %>
                    <p>You are eligible for voting.</p>
    <%
                } else {
    %>
                    <p>You are not eligible for voting. You must be at least 18 years old.</p>
    <%
                }
            } catch (NumberFormatException e) {
    %>
                <p>Please enter a valid age as a number.</p>
    <%
            }
        }
    %>
    </font>
</body>
</html>



import java.io.File;
public class FileExtensionDisplay {
    public static void main(String[] args) {
        String directoryPath = "C:/Users/Desktop/slip/java";
        String extension = ".txt";
        File directory = new File(directoryPath);
        if (directory.exists() && directory.isDirectory()) {
            for (File file : directory.listFiles()) {
                if (file.isFile() && file.getName().endsWith(extension)) {
                    System.out.println(file.getName());
                }
            }
        } else {
            System.out.println("Directory does not exist or is not a directory");
        }
    }
}



package com.app.myapplication;
import android.app.Activity;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
public class MainActivity extends Activity {
    EditText etEmail, etSubject, etMessage;
    Button Send, attachment;
    TextView tvAttachment;
    String email, subject, message;
    Uri URI = null;
    private static final int PICK_FROM_GALLERY = 101;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        etEmail = findViewById(R.id.etTo);
        etSubject = findViewById(R.id.etSubject);
        etMessage = findViewById(R.id.etMessage);
        attachment = findViewById(R.id.btAttachment);
        tvAttachment = findViewById(R.id.tvAttachment);
        Send = findViewById(R.id.btSend);
        Send.setOnClickListener(v -> sendEmail());
        attachment.setOnClickListener(v -> openFolder());
    }
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == PICK_FROM_GALLERY && resultCode == RESULT_OK) {
            URI = data.getData();
            tvAttachment.setText(URI.getLastPathSegment());
            tvAttachment.setVisibility(View.VISIBLE);
        }
    }
    public void sendEmail() {
        try {
            email = etEmail.getText().toString();
            subject = etSubject.getText().toString();
            message = etMessage.getText().toString();
            Intent emailIntent = new Intent(Intent.ACTION_SENDTO, Uri.parse("mailto:" + email));
            emailIntent.putExtra(Intent.EXTRA_SUBJECT, subject);
            emailIntent.putExtra(Intent.EXTRA_TEXT, message);
            if (URI != null) emailIntent.putExtra(Intent.EXTRA_STREAM, URI);
            startActivity(Intent.createChooser(emailIntent, "Sending email..."));
        } catch (Throwable t) {
            Toast.makeText(this, "Request failed try again: " + t.toString(), Toast.LENGTH_LONG).show();
        }
    }
    public void openFolder() {
        Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
        intent.setType("image/*");
        startActivityForResult(Intent.createChooser(intent, "Complete action using"), PICK_FROM_GALLERY);
    }
}
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="4dp"
    tools:context=".MainActivity">
    <EditText
        android:id="@+id/etTo"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="5dp"
        android:hint="Receiver's Email Address!"
        android:inputType="textEmailAddress"
        android:singleLine="true" />
    <EditText
        android:id="@+id/etSubject"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="5dp"
        android:hint="Enter Subject"
        android:singleLine="true" />
    <EditText
        android:id="@+id/etMessage"
        android:layout_width="match_parent"
        android:layout_height="200dp"
        android:layout_margin="5dp"
        android:gravity="top|start"
        android:hint="Compose Email"
        android:inputType="textMultiLine" />
    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content">
        <Button
            android:id="@+id/btSend"
            android:layout_width="80dp"
            android:layout_height="50dp"
            android:layout_margin="5dp"
            android:text="Send" />
        <Button
            android:id="@+id/btAttachment"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:text="Attachment" />
    </RelativeLayout>
    <TextView
        android:id="@+id/tvAttachment"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:visibility="gone" />
</LinearLayout>



<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp">
    <EditText
        android:id="@+id/urlEditText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter URL"
        android:inputType="textUri" />
    <Button
        android:id="@+id/downloadButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/urlEditText"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="16dp"
        android:text="Download File" />
</RelativeLayout>
package com.app.myapplication;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.ResultReceiver;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity {
    private EditText urlEditText;
    private Button downloadButton;
    private ResultReceiver receiver;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        urlEditText = findViewById(R.id.urlEditText);
        downloadButton = findViewById(R.id.downloadButton);
        receiver = new DownloadReceiver(new Handler());
        downloadButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String url = urlEditText.getText().toString();
                if (!url.isEmpty()) {
                    Intent intent = new Intent(MainActivity.this, DownloadService.class);
                    intent.putExtra("url", url);
                    intent.putExtra("receiver", receiver);
                    startService(intent);
                } else {
                    Toast.makeText(MainActivity.this, "Please enter a URL", Toast.LENGTH_SHORT).show();
                }
            }
        });
    }
    private class DownloadReceiver extends ResultReceiver {
        public DownloadReceiver(Handler handler) {
            super(handler);
        }
        @Override
        protected void onReceiveResult(int resultCode, Bundle resultData) {
            super.onReceiveResult(resultCode, resultData);
            if (resultCode == DownloadService.DOWNLOAD_SUCCESS) {
                String filePath = resultData.getString("filePath");
                Toast.makeText(MainActivity.this, "File downloaded successfully: " + filePath, Toast.LENGTH_LONG).show();
            } else if (resultCode == DownloadService.DOWNLOAD_ERROR) {
                Toast.makeText(MainActivity.this, "Error downloading file", Toast.LENGTH_SHORT).show();
            }
        }
    }
}
package com.app.myapplication;
import android.app.IntentService;
import android.content.Intent;
import android.os.Bundle;
import android.os.Environment;
import android.os.ResultReceiver;
import android.util.Log;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
public class DownloadService extends IntentService {
    public static final int DOWNLOAD_SUCCESS = 0;
    public static final int DOWNLOAD_ERROR = 1;

    public DownloadService() {
        super("DownloadService");
    }
    @Override
    protected void onHandleIntent(Intent intent) {
        String urlToDownload = intent.getStringExtra("url");
        ResultReceiver receiver = intent.getParcelableExtra("receiver");
        try {
            URL url = new URL(urlToDownload);
            HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
            urlConnection.connect();
            int responseCode = urlConnection.getResponseCode();
            if (responseCode == HttpURLConnection.HTTP_OK) {
                InputStream inputStream = new BufferedInputStream(urlConnection.getInputStream());
                String fileName = "downloaded_file";
                File file = new File(getExternalFilesDir(Environment.DIRECTORY_DOWNLOADS), fileName);
                FileOutputStream outputStream = new FileOutputStream(file);
                byte[] buffer = new byte[1024];
                int len;
                while ((len = inputStream.read(buffer)) != -1) {
                    outputStream.write(buffer, 0, len);
                }
                outputStream.close();
                inputStream.close();
                Bundle bundle = new Bundle();
                bundle.putString("filePath", file.getAbsolutePath());
                receiver.send(DOWNLOAD_SUCCESS, bundle);
            } else {
                Log.e("DownloadService", "Server returned HTTP response code: " + responseCode);
                receiver.send(DOWNLOAD_ERROR, null);
            }
        } catch (IOException e) {
            Log.e("DownloadService", "Error downloading file: " + e.getMessage());
            receiver.send(DOWNLOAD_ERROR, null);
        }
    }
}