import java.sql.*;
public class Slip12_q1 {
    public static void main(String args[]) {
        try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:DSN");
            Statement st = con.createStatement();
            String query = "select * from emp";
            ResultSet rs = st.executeQuery(query);
            int count = 0;
            while (rs.next()) {
                count++;
            }
            System.out.println("The number of records are: " + count);
            rs.close();
            st.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}


import java.util.Random;
class DemoThread extends Thread {
    DemoThread(String nm) {
        super(nm);
    }
    public void run() {
        System.out.println("Thread is running");
        System.out.println(getName());
        Random r = new Random();
        int s = r.nextInt(5000);
        System.out.println("Thread will sleep for " + s + " millisecs");
        try {
            sleep(s);
        } catch (InterruptedException ie) {
            ie.printStackTrace();
        }
        System.out.println("Thread is no more");
    }
}
public class Slip12_q2 {
    public static void main(String args[]) throws InterruptedException {
        DemoThread t1 = new DemoThread("EnumTech");
        System.out.println(t1.getState());
        t1.start();
        System.out.println(t1.getState());
        t1.join();
        System.out.println(t1.getState());
    }
}



<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity" >
    <TextView
        android:id="@+id/tvRg"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentTop="true"
        android:layout_centerHorizontal="true"
        android:gravity="center"
        android:text="Radio Buttons and CheckBoxes"
        android:textAppearance="?android:attr/textAppearanceMedium" />
    <RadioGroup
        android:id="@+id/radioGroup"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@+id/tvRg"
        android:layout_centerHorizontal="true"
        android:orientation="vertical"
        android:layout_marginTop="10dp" >
        <RadioButton
            android:id="@+id/rb1"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:checked="false"
            android:text="FYBBA CA" />
        <RadioButton
            android:id="@+id/rb2"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="SY BBA CA"
            android:checked="false" />
        <RadioButton
            android:id="@+id/rb3"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="TY BBA CA"
            android:checked="true" />
        <CheckBox
            android:id="@+id/cb1"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_below="@+id/rb3"
            android:layout_centerHorizontal="true"
            android:checked="false"
            android:text="C++" />
        <CheckBox
            android:id="@+id/cb2"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_below="@+id/cb1"
            android:layout_centerHorizontal="true"
            android:checked="false"
            android:text="DS using C" />
        <CheckBox
            android:id="@+id/cb3"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_below="@+id/cb2"
            android:layout_centerHorizontal="true"
            android:checked="false"
            android:text="PHP" />
        <CheckBox
            android:id="@+id/cb4"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_below="@+id/cb3"
            android:layout_centerHorizontal="true"
            android:checked="false"
            android:text="JAVA" />
        <Button
            android:id="@+id/btnSubmit"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/cb4"
            android:layout_centerHorizontal="true"
            android:layout_marginTop="10dp"
            android:text="SUBMIT" />
    </RadioGroup>
</RelativeLayout>
package com.app.myapplication;
import android.os.Bundle;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity {
    RadioGroup radioGroup;
    RadioButton selectedRadioButton;
    Button buttonSubmit;
    CheckBox cb1, cb2, cb3, cb4;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        buttonSubmit = (Button) findViewById(R.id.btnSubmit);
        radioGroup = (RadioGroup) findViewById(R.id.radioGroup);
        cb1 = (CheckBox) findViewById(R.id.cb1);
        cb2 = (CheckBox) findViewById(R.id.cb2);
        cb3 = (CheckBox) findViewById(R.id.cb3);
        cb4 = (CheckBox) findViewById(R.id.cb4);
        buttonSubmit.setOnClickListener(v -> {
            selectedRadioButton = (RadioButton) findViewById(radioGroup.getCheckedRadioButtonId());
            String yourVote = selectedRadioButton.getText().toString();
            String checkBoxChoices = "";
            if (cb1.isChecked()) {
                checkBoxChoices += cb1.getText().toString() + "\t: YES\n";
            } else {
                checkBoxChoices += cb1.getText().toString() + "\t: NO\n";
            }
            if (cb2.isChecked()) {
                checkBoxChoices += cb2.getText().toString() + "\t: YES\n";
            } else {
                checkBoxChoices += cb2.getText().toString() + "\t: NO\n";
            }
            if (cb3.isChecked()) {
                checkBoxChoices += cb3.getText().toString() + "\t: YES\n";
            } else {
                checkBoxChoices += cb3.getText().toString() + "\t: NO\n";
            }
            if (cb4.isChecked()) {
                checkBoxChoices += cb4.getText().toString() + "\t: YES\n";
            } else {
                checkBoxChoices += cb4.getText().toString() + "\t: NO\n";
            }
            Toast.makeText(MainActivity.this, "Selected: " + yourVote + "\n" + checkBoxChoices, Toast.LENGTH_LONG).show();
        });
    }
}


<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">
    <com.google.android.gms.maps.MapView
        android:id="@+id/map_view"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:clickable="true"
        android:enabled="true" />
    <EditText
        android:id="@+id/etSearch"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter location"
        android:layout_marginTop="16dp"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:layout_alignParentTop="true"
        android:layout_toStartOf="@id/btnSearch"
        android:inputType="text" />
    <Button
        android:id="@+id/btnSearch"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Search"
        android:layout_alignParentTop="true"
        android:layout_alignParentEnd="true"
        android:layout_marginTop="16dp"
        android:layout_marginEnd="16dp"/>
</RelativeLayout>
package com.app.myapplication;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import androidx.appcompat.app.AppCompatActivity;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.MapView;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;
import java.io.IOException;
import java.util.List;
import java.util.Locale;
public class MainActivity extends AppCompatActivity implements OnMapReadyCallback {
    private static final float DEFAULT_ZOOM = 15f;
    private MapView mapView;
    private GoogleMap googleMap;
    private EditText etSearch;
    private Button btnSearch;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mapView = findViewById(R.id.map_view);
        etSearch = findViewById(R.id.etSearch);
        btnSearch = findViewById(R.id.btnSearch);
        mapView.onCreate(savedInstanceState);
        mapView.getMapAsync(this);
        btnSearch.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String locationName = etSearch.getText().toString();
                if (!locationName.isEmpty()) {
                    try {
                        List<android.location.Address> addressList = new android.location.Geocoder(MainActivity.this).getFromLocationName(locationName, 1);
                        if (addressList != null && !addressList.isEmpty()) {
                            android.location.Address address = addressList.get(0);
                            LatLng latLng = new LatLng(address.getLatitude(), address.getLongitude());
                            googleMap.addMarker(new MarkerOptions().position(latLng).title(locationName));
                            googleMap.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, DEFAULT_ZOOM));
                        }
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
            }
        });
    }
    @Override
    public void onMapReady(GoogleMap map) {
        googleMap = map;
        if (googleMap != null) {
            googleMap.setMyLocationEnabled(true);
            googleMap.getUiSettings().setMyLocationButtonEnabled(true);
        }
    }
    @Override
    protected void onResume() {
        super.onResume();
        mapView.onResume();
    }
    @Override
    protected void onStart() {
        super.onStart();
        mapView.onStart();
    }
    @Override
    protected void onStop() {
        super.onStop();
        mapView.onStop();
    }

    @Override
    protected void onPause() {
        super.onPause();
        mapView.onPause();
    }
    @Override
    protected void onDestroy() {
        super.onDestroy();
        mapView.onDestroy();
    }
    @Override
    public void onLowMemory() {
        super.onLowMemory();
        mapView.onLowMemory();
    }
}